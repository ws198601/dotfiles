" Dark powered mode of SpaceVim, generated by SpaceVim automatically.
let g:spacevim_enable_debug = 1
let g:spacevim_realtime_leader_guide = 1
call SpaceVim#layers#load('incsearch')
call SpaceVim#layers#load('lang#c')
call SpaceVim#layers#load('lang#elixir')
call SpaceVim#layers#load('lang#go')
call SpaceVim#layers#load('lang#haskell')
call SpaceVim#layers#load('lang#java')
call SpaceVim#layers#load('lang#javascript')
call SpaceVim#layers#load('lang#lua')
call SpaceVim#layers#load('lang#perl')
call SpaceVim#layers#load('lang#php')
call SpaceVim#layers#load('lang#python')
call SpaceVim#layers#load('lang#rust')
call SpaceVim#layers#load('lang#swig')
call SpaceVim#layers#load('lang#tmux')
call SpaceVim#layers#load('lang#vim')
call SpaceVim#layers#load('lang#xml')
call SpaceVim#layers#load('shell')   
call SpaceVim#layers#load('tools#screensaver')
let g:spacevim_enable_vimfiler_welcome = 1
let g:spacevim_enable_debug = 1
let g:deoplete#auto_complete_delay = 150
let g:spacevim_enable_tabline_filetype_icon = 1
let g:spacevim_enable_statusline_display_mode = 0
let g:spacevim_enable_os_fileformat_icon = 1
let g:spacevim_buffer_index_type = 1
let g:neomake_vim_enabled_makers = []
if executable('vimlint')
    call add(g:neomake_vim_enabled_makers, 'vimlint') 
endif
if executable('vint')
    call add(g:neomake_vim_enabled_makers, 'vint') 
endif
if has('python3')
    let g:ctrlp_map = ''
    nnoremap <silent> <C-p> :Denite file_rec<CR>
endif
let g:clang2_placeholder_next = ''
let g:clang2_placeholder_prev = ''


"""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""自定义BEGIN""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""spacevim本身设置"""""
"新增layers
call SpaceVim#layers#load('lang#markdown')
call SpaceVim#layers#load('git')
call SpaceVim#layers#load('tags')
call SpaceVim#layers#load('ui')
"layer: autocomplete 自动补全功能
"导入自动补全功能  自动补全功能支持
"参考：https://spacevim.org/layers/autocomplete/
call SpaceVim#layers#load('autocomplete')

"自定义主题信息 layer: colorscheme  
let g:spacevim_colorscheme = 'desert'
let g:spacevim_colorscheme_bg = 'dark'
let g:spacevim_guifont = 'DejaVu\ Sans\ Mono\ for\ Powerline'

"为了配合c语言的语法高亮 需要设置这点
syntax on

" 采用玄雪的配置 状态栏分割符的风格，取值：'arrow', 'curve', 'slant', 'nil', 'fire'
let g:spacevim_statusline_separator = 'slant'
let g:spacevim_statusline_inactive_separator = 'bar'
" 采用玄雪的配置 buffer索引图标的风格，取值：0, 1, 2, 3, 4, 5
let g:spacevim_buffer_index_type = 4
let g:spacevim_enable_tabline_filetype_icon = 0
let g:spacevim_enable_os_fileformat_icon = 0
" 缩进宽度
let g:spacevim_default_indent = 4

"""""""操作""""""
"设置leader
let mapleader = "," 
"esc 另外spacevim默认jk为esc
imap <leader>a <ESC>
"快速保存
nmap <leader>w :w!<CR>
"粘贴并删除紧挨着后边的单词,  该粘贴必须放在要删除单词的前边
nmap <leader>p  Pldebyw
" 插入模式下用绝对行号, 普通模式下用相对
autocmd InsertEnter * :set norelativenumber number
autocmd InsertLeave * :set relativenumber
"常规模式下输入 cs 清除行尾空格
nmap cs :%s/\s\+$//g<cr>:noh<cr>
"常规模式下输入 cm 清除行尾 ^M 符号
nmap cm :%s/\r$//g<cr>:noh<cr>
" Ctrl + K 插入模式下光标向上移动
imap <c-k> <Up>
" Ctrl + J 插入模式下光标向下移动
imap <c-j> <Down>
" Ctrl + H 插入模式下光标向左移动
imap <c-h> <Left>
" Ctrl + L 插入模式下光标向右移动
imap <c-l> <Right>

""terminal 退出编辑模式用快捷键 ctrl-\ ctrl-n

"python 和 python3
"let g:python_host_skip_check=1
"let g:python_host_prog= 'D:\python27\***.exe'
"let g:python3_host_skip_check=1
"let g:python3_host_prog= 'D:\python3\***.exe'

" 指定python2和python3的路径
let g:python_host_skip_check=1
let g:python_host_prog = 'D:\Python27\python.exe'
let g:python3_host_skip_check=1
let g:python3_host_prog = 'D:\Python36\python.exe'

"""""执行命令"""""""
"------------------------------
"  < ctags 插件配置 >
"------------------------------
"对浏览代码非常的方便,可以在函数,变量之间跳转等
set tags=./tags;                            "向上级目录递归查找tags文件（好像只有在Windows下才有用）
map <C-F12> :!ctags -R --fields=+iaS --extra=+q<cr>

"解决状态栏有些特殊字符不显示的
"gfn=DejaVu_Sans_Mono_for_Powerline:h11:cANSI:qDRAFT
"set gfn=DejaVu_Sans_Mono_for_Powerline:h11:qDRAFT

""""自己的插件""""""
"语法高亮  justinmk/vim-syntax-extra
" If you want to add some custom plugins, use these options:
let g:spacevim_custom_plugins = [ ['justinmk/vim-syntax-extra'], 
\ ['plasticboy/vim-markdown', {'on_ft' : 'markdown'}],
\ ]

"vim-markdown 的配置参数
"To disable conceal regardless of conceallevel setting, add the following to your .vimrc:
let g:vim_markdown_conceal = 0

"""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""自定义END""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""

